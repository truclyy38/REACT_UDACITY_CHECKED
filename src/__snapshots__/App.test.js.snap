// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Page snapshots 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="app"
      >
        <div>
          <nav
            class="navbar navbar-expand-lg navbar-light bg-light"
          >
            <div
              class="container-fluid"
            >
              <span
                class="navbar-brand fw-bold"
              >
                Employee Poll App
              </span>
              <button
                aria-controls="navbarSupportedContent"
                aria-expanded="false"
                aria-label="Toggle navigation"
                class="navbar-toggler"
                data-bs-target="#navbarSupportedContent"
                data-bs-toggle="collapse"
                type="button"
              >
                <span
                  class="navbar-toggler-icon"
                />
              </button>
              <div
                class="collapse navbar-collapse"
                id="navbarSupportedContent"
              >
                <ul
                  class="navbar-nav me-auto mb-2 mb-lg-0"
                >
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link active"
                      href="/"
                    >
                      Home
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link active"
                      href="/leaderboard"
                    >
                      Leaderboard
                    </a>
                  </li>
                  <li
                    class="nav-item"
                  >
                    <a
                      class="nav-link active"
                      href="/add"
                    >
                      New
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </nav>
        </div>
        <div
          class="container"
        >
          <div
            class="screen"
          >
            <div
              class="screen__content"
            >
              <form
                class="login"
              >
                <h3
                  class="fw-bold"
                  data-testid="employee-title"
                >
                  Employee Poll
                </h3>
                <div
                  class="login__field"
                >
                  <label
                    for="username"
                  >
                    Username
                  </label>
                  <select
                    class="custom-select"
                    data-testid="username"
                  />
                </div>
                <button
                  class="button login__submit justify-content-center"
                  data-testid="submit"
                  type="submit"
                >
                  <span
                    class="button__text "
                  >
                    Submit
                  </span>
                </button>
              </form>
            </div>
            <div
              class="screen__background"
            >
              <span
                class="screen__background__shape screen__background__shape4"
              />
              <span
                class="screen__background__shape screen__background__shape3"
              />
              <span
                class="screen__background__shape screen__background__shape2"
              />
              <span
                class="screen__background__shape screen__background__shape1"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="app"
    >
      <div>
        <nav
          class="navbar navbar-expand-lg navbar-light bg-light"
        >
          <div
            class="container-fluid"
          >
            <span
              class="navbar-brand fw-bold"
            >
              Employee Poll App
            </span>
            <button
              aria-controls="navbarSupportedContent"
              aria-expanded="false"
              aria-label="Toggle navigation"
              class="navbar-toggler"
              data-bs-target="#navbarSupportedContent"
              data-bs-toggle="collapse"
              type="button"
            >
              <span
                class="navbar-toggler-icon"
              />
            </button>
            <div
              class="collapse navbar-collapse"
              id="navbarSupportedContent"
            >
              <ul
                class="navbar-nav me-auto mb-2 mb-lg-0"
              >
                <li
                  class="nav-item"
                >
                  <a
                    class="nav-link active"
                    href="/"
                  >
                    Home
                  </a>
                </li>
                <li
                  class="nav-item"
                >
                  <a
                    class="nav-link active"
                    href="/leaderboard"
                  >
                    Leaderboard
                  </a>
                </li>
                <li
                  class="nav-item"
                >
                  <a
                    class="nav-link active"
                    href="/add"
                  >
                    New
                  </a>
                </li>
              </ul>
            </div>
          </div>
        </nav>
      </div>
      <div
        class="container"
      >
        <div
          class="screen"
        >
          <div
            class="screen__content"
          >
            <form
              class="login"
            >
              <h3
                class="fw-bold"
                data-testid="employee-title"
              >
                Employee Poll
              </h3>
              <div
                class="login__field"
              >
                <label
                  for="username"
                >
                  Username
                </label>
                <select
                  class="custom-select"
                  data-testid="username"
                />
              </div>
              <button
                class="button login__submit justify-content-center"
                data-testid="submit"
                type="submit"
              >
                <span
                  class="button__text "
                >
                  Submit
                </span>
              </button>
            </form>
          </div>
          <div
            class="screen__background"
          >
            <span
              class="screen__background__shape screen__background__shape4"
            />
            <span
              class="screen__background__shape screen__background__shape3"
            />
            <span
              class="screen__background__shape screen__background__shape2"
            />
            <span
              class="screen__background__shape screen__background__shape1"
            />
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`LeaderBoard Page snapshots 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class=" m-3 p-3"
      >
        <h5
          class="fw-bold"
        >
          Leaderboard
        </h5>
        <table
          class="table p-3 bg-light table-bordered"
        >
          <thead>
            <tr>
              <th
                scope="col"
              >
                #
              </th>
              <th
                scope="col"
              >
                USER
              </th>
              <th
                scope="col"
              >
                ANSWERED
              </th>
              <th
                scope="col"
              >
                CREATED
              </th>
            </tr>
          </thead>
          <tbody />
        </table>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class=" m-3 p-3"
    >
      <h5
        class="fw-bold"
      >
        Leaderboard
      </h5>
      <table
        class="table p-3 bg-light table-bordered"
      >
        <thead>
          <tr>
            <th
              scope="col"
            >
              #
            </th>
            <th
              scope="col"
            >
              USER
            </th>
            <th
              scope="col"
            >
              ANSWERED
            </th>
            <th
              scope="col"
            >
              CREATED
            </th>
          </tr>
        </thead>
        <tbody />
      </table>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Login Page should see login form 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container"
      >
        <div
          class="screen"
        >
          <div
            class="screen__content"
          >
            <form
              class="login"
            >
              <h3
                class="fw-bold"
                data-testid="employee-title"
              >
                Employee Poll
              </h3>
              <div
                class="login__field"
              >
                <label
                  for="username"
                >
                  Username
                </label>
                <select
                  class="custom-select"
                  data-testid="username"
                >
                  <option>
                    sarahedo
                  </option>
                  <option>
                    tylermcginnis
                  </option>
                  <option>
                    johndoe
                  </option>
                </select>
              </div>
              <button
                class="button login__submit justify-content-center"
                data-testid="submit"
                type="submit"
              >
                <span
                  class="button__text "
                >
                  Submit
                </span>
              </button>
            </form>
          </div>
          <div
            class="screen__background"
          >
            <span
              class="screen__background__shape screen__background__shape4"
            />
            <span
              class="screen__background__shape screen__background__shape3"
            />
            <span
              class="screen__background__shape screen__background__shape2"
            />
            <span
              class="screen__background__shape screen__background__shape1"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container"
    >
      <div
        class="screen"
      >
        <div
          class="screen__content"
        >
          <form
            class="login"
          >
            <h3
              class="fw-bold"
              data-testid="employee-title"
            >
              Employee Poll
            </h3>
            <div
              class="login__field"
            >
              <label
                for="username"
              >
                Username
              </label>
              <select
                class="custom-select"
                data-testid="username"
              >
                <option>
                  sarahedo
                </option>
                <option>
                  tylermcginnis
                </option>
                <option>
                  johndoe
                </option>
              </select>
            </div>
            <button
              class="button login__submit justify-content-center"
              data-testid="submit"
              type="submit"
            >
              <span
                class="button__text "
              >
                Submit
              </span>
            </button>
          </form>
        </div>
        <div
          class="screen__background"
        >
          <span
            class="screen__background__shape screen__background__shape4"
          />
          <span
            class="screen__background__shape screen__background__shape3"
          />
          <span
            class="screen__background__shape screen__background__shape2"
          />
          <span
            class="screen__background__shape screen__background__shape1"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`New Page snapshots 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="d-flex text-center flex-column p-3"
      >
        <h2
          class="card-text fw-bold"
        >
          Would you rather
        </h2>
        <h5
          class="card-title text-muted"
        >
          Create your own poll
        </h5>
        <form>
          <div
            class="input-group mb-3"
          >
            <span
              class="input-group-text"
              data-testid="firstOptionLabel"
            >
              First Option
            </span>
            <input
              aria-describedby="inputGroup-sizing-default"
              aria-label="Sizing example input"
              class="form-control"
              data-testid="firstOption"
              name="firstOption"
              type="text"
              value=""
            />
          </div>
          <div
            class="input-group mb-3"
          >
            <span
              class="input-group-text"
              data-testid="secondOptionLabel"
            >
              Second Option
            </span>
            <input
              aria-describedby="inputGroup-sizing-default"
              aria-label="Sizing example input"
              class="form-control"
              data-testid="secondOption"
              name="firstOption"
              type="text"
              value=""
            />
          </div>
          <div
            class="d-flex text-center justify-content-center"
            style="width: 100%;"
          >
            <button
              class="button login__submit d-flex text-center justify-content-center"
              disabled=""
              style="width: 200px;"
              type="submit"
            >
              <span
                class="button__text"
                data-testid="submit-new"
              >
                Submit
              </span>
            </button>
          </div>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="d-flex text-center flex-column p-3"
    >
      <h2
        class="card-text fw-bold"
      >
        Would you rather
      </h2>
      <h5
        class="card-title text-muted"
      >
        Create your own poll
      </h5>
      <form>
        <div
          class="input-group mb-3"
        >
          <span
            class="input-group-text"
            data-testid="firstOptionLabel"
          >
            First Option
          </span>
          <input
            aria-describedby="inputGroup-sizing-default"
            aria-label="Sizing example input"
            class="form-control"
            data-testid="firstOption"
            name="firstOption"
            type="text"
            value=""
          />
        </div>
        <div
          class="input-group mb-3"
        >
          <span
            class="input-group-text"
            data-testid="secondOptionLabel"
          >
            Second Option
          </span>
          <input
            aria-describedby="inputGroup-sizing-default"
            aria-label="Sizing example input"
            class="form-control"
            data-testid="secondOption"
            name="firstOption"
            type="text"
            value=""
          />
        </div>
        <div
          class="d-flex text-center justify-content-center"
          style="width: 100%;"
        >
          <button
            class="button login__submit d-flex text-center justify-content-center"
            disabled=""
            style="width: 200px;"
            type="submit"
          >
            <span
              class="button__text"
              data-testid="submit-new"
            >
              Submit
            </span>
          </button>
        </div>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NewPol snapshots 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="d-flex text-center flex-column p-3"
      >
        <h2
          class="card-text fw-bold"
        >
          Would you rather
        </h2>
        <h5
          class="card-title text-muted"
        >
          Create your own poll
        </h5>
        <form>
          <div
            class="input-group mb-3"
          >
            <span
              class="input-group-text"
              data-testid="firstOptionLabel"
            >
              First Option
            </span>
            <input
              aria-describedby="inputGroup-sizing-default"
              aria-label="Sizing example input"
              class="form-control"
              data-testid="firstOption"
              name="firstOption"
              type="text"
              value=""
            />
          </div>
          <div
            class="input-group mb-3"
          >
            <span
              class="input-group-text"
              data-testid="secondOptionLabel"
            >
              Second Option
            </span>
            <input
              aria-describedby="inputGroup-sizing-default"
              aria-label="Sizing example input"
              class="form-control"
              data-testid="secondOption"
              name="firstOption"
              type="text"
              value=""
            />
          </div>
          <div
            class="d-flex text-center justify-content-center"
            style="width: 100%;"
          >
            <button
              class="button login__submit d-flex text-center justify-content-center"
              disabled=""
              style="width: 200px;"
              type="submit"
            >
              <span
                class="button__text"
                data-testid="submit-new"
              >
                Submit
              </span>
            </button>
          </div>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="d-flex text-center flex-column p-3"
    >
      <h2
        class="card-text fw-bold"
      >
        Would you rather
      </h2>
      <h5
        class="card-title text-muted"
      >
        Create your own poll
      </h5>
      <form>
        <div
          class="input-group mb-3"
        >
          <span
            class="input-group-text"
            data-testid="firstOptionLabel"
          >
            First Option
          </span>
          <input
            aria-describedby="inputGroup-sizing-default"
            aria-label="Sizing example input"
            class="form-control"
            data-testid="firstOption"
            name="firstOption"
            type="text"
            value=""
          />
        </div>
        <div
          class="input-group mb-3"
        >
          <span
            class="input-group-text"
            data-testid="secondOptionLabel"
          >
            Second Option
          </span>
          <input
            aria-describedby="inputGroup-sizing-default"
            aria-label="Sizing example input"
            class="form-control"
            data-testid="secondOption"
            name="firstOption"
            type="text"
            value=""
          />
        </div>
        <div
          class="d-flex text-center justify-content-center"
          style="width: 100%;"
        >
          <button
            class="button login__submit d-flex text-center justify-content-center"
            disabled=""
            style="width: 200px;"
            type="submit"
          >
            <span
              class="button__text"
              data-testid="submit-new"
            >
              Submit
            </span>
          </button>
        </div>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`PageNotFound Page snapshots 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <h1>
        Page Not Found
      </h1>
    </div>
  </body>,
  "container": <div>
    <h1>
      Page Not Found
    </h1>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
